{"version":3,"file":"Modal.js","sourceRoot":"","sources":["src/Modal.tsx"],"names":[],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport React, { useEffect } from \"react\";\nimport * as typography from \"./typography\";\nimport * as colors from \"./colors\";\nimport * as CSS from \"csstype\";\n\ninterface Props {\n  /**\n   * Optional primary action, usually a button\n   *\n   * Do not apply any layout via css; this will be handled internally for consistency\n   */\n  primaryAction?: React.ReactNode;\n\n  /**\n   * Optional secondary action, usually a button\n   *\n   * Do not apply any layout via css; this will be handled internally for consistency\n   */\n  secondaryAction?: React.ReactNode;\n\n  children?: React.ReactNode;\n  /**\n   * Optional descrition to show of the modal\n   *\n   * This will probably be moved into a card component\n   */\n  description?: React.ReactNode;\n\n  /**\n   * Text to display in the bottom left of a modal/dialog\n   */\n  bottomLeftText?: React.ReactNode;\n\n  /**\n   * Callback to call when the modal is closed\n   */\n  onClose?: () => void;\n\n  /**\n   * Size to show the modal at\n   */\n  size: \"small\" | \"medium\" | \"large\";\n\n  /**\n   * Title of the modal\n   *\n   * This will probably be moved into a card component\n   */\n  title: React.ReactNode;\n}\n\nconst modalBackdrop = css`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n\n  &:after {\n    position: fixed;\n    z-index: 10;\n    content: \"\";\n    background-color: ${colors.grey.lighter};\n    opacity: 0.7;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n  }\n`;\n\nfunction assertUnreachable(value: never): never {\n  throw new TypeError(`Unreachable value reached ${value}`);\n}\n\ntype TLength = string | 0 | number;\n\nconst getModalWidth = (size: Props[\"size\"]): CSS.WidthProperty<TLength> => {\n  switch (size) {\n    case \"small\":\n      return 460;\n    case \"medium\":\n      return 600;\n    case \"large\":\n      return 800;\n    default:\n      throw assertUnreachable(size);\n  }\n};\n\nexport function Modal({\n  title,\n  description,\n  children,\n  onClose,\n  size,\n  bottomLeftText,\n  primaryAction,\n  secondaryAction,\n}: Props): ReturnType<React.FC> {\n  useEffect(() => {\n    function handleKeyDown(event: KeyboardEvent) {\n      if (event.code === \"Escape\" && onClose) {\n        onClose();\n      }\n    }\n\n    // add an event listener for all clicks\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  });\n\n  return (\n    <div onClick={onClose} css={modalBackdrop}>\n      <div\n        onClick={event => event.stopPropagation()}\n        css={{\n          backgroundColor: \"white\",\n          borderRadius: 12,\n          boxShadow: `0 16px 32px 0 rgba(0, 0, 0, 0.12), 0 0 0 1px rgba(18, 21, 26, 0.04)`,\n          left: \"50%\",\n          maxHeight: \"100%\",\n          minWidth: 400,\n          opacity: 1,\n          overflowY: \"scroll\",\n          padding: size === \"large\" ? \"40px\" : \"32px\",\n          position: \"absolute\",\n          top: \"20%\",\n          transform: \"translate(-50%)\",\n          width: getModalWidth(size),\n          zIndex: 11,\n        }}\n      >\n        <div>\n          {title && (\n            <div>\n              <div\n                css={{\n                  color: colors.black.base,\n                  marginBottom: 10,\n                  ...(size === \"small\"\n                    ? { ...typography.base.large, fontWeight: 600 }\n                    : typography.base.xxlarge),\n                }}\n              >\n                {title}\n              </div>\n            </div>\n          )}\n          {description && (\n            <div css={{ ...typography.base.base, color: colors.black.base }}>\n              {description}\n            </div>\n          )}\n        </div>\n        <div css={{ marginTop: 12 }}>{children}</div>\n        {(primaryAction || secondaryAction || bottomLeftText) && (\n          <div\n            css={{\n              alignItems: \"baseline\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 24,\n            }}\n          >\n            {bottomLeftText && (\n              <div css={{ marginRight: \"auto\" }}>{bottomLeftText}</div>\n            )}\n            {secondaryAction && (\n              <div css={{ marginRight: 12 }}>{secondaryAction}</div>\n            )}\n            {primaryAction && <div>{primaryAction}</div>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]}