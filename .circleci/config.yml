version: 2

defaults: &defaults
  docker:
    - image: circleci/node:dubnium
  working_directory: ~/space-kit

jobs:
  eslint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Attempt to restore node_modules cache (keyed on package-lock.json and circle config)
          keys:
            - node-modules-cache--{{ checksum "package-lock.json" }}--{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install npm dependencies if cache missed (`npm ci`)
          command: if [ ! -d "./node_modules" ]; then npm ci; fi
      - save_cache:
          name: Save node_modules cache (keyed on package-lock.json and circle config)
          key: node-modules-cache--{{ checksum "package-lock.json" }}--{{ checksum ".circleci/config.yml" }}
          paths:
            - node_modules
      - run:
          name: Ensure output directory exists
          command: mkdir -p /tmp/test-reports/eslint
      - run:
          name: Eslint
          command: npm run lint -- --no-cache --format junit --output-file /tmp/test-reports/eslint/results.xml
      - store_test_results:
          path: /tmp/test-reports

  typescript:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Attempt to restore node_modules cache (keyed on package-lock.json and circle config)
          keys:
            - node-modules-cache--{{ checksum "package-lock.json" }}--{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install npm dependencies if cache missed (`npm ci`)
          command: if [ ! -d "./node_modules" ]; then npm ci; fi
      - save_cache:
          name: Save node_modules cache (keyed on package-lock.json and circle config)
          key: node-modules-cache--{{ checksum "package-lock.json" }}--{{ checksum ".circleci/config.yml" }}
          paths:
            - node_modules
      - run:
          name: TypeScript
          command: npm run test:typescript

workflows:
  version: 2
  test:
    jobs:
      - eslint
      - typescript
